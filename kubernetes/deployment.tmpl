---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hamlet-staging-export-tmp
  annotations:
    volume.beta.kubernetes.io/storage-class: "aws-efs"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamlet-staging-app
  labels:
    app: hamlet-staging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hamlet-staging-app
  template:
    metadata:
      labels:
        app: hamlet-staging-app
    spec:
      containers:
        - name: hamlet-staging-app
          image: zooniverse/hamlet:__IMAGE_TAG__
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_HOST
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_NAME
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: SECRET_KEY
            - name: PANOPTES_APPLICATION_ID
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: PANOPTES_APPLICATION_ID
            - name: PANOPTES_SECRET
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: PANOPTES_SECRET
            - name: DJANGO_ENV
              value: staging
            - name: REDIS_URI
              value: "redis://hamlet-staging-redis"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamlet-staging-celery
  labels:
    app: hamlet-staging-celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hamlet-staging-celery
  template:
    metadata:
      labels:
        app: hamlet-staging-celery
    spec:
      containers:
        - name: hamlet-staging-celery
          image: zooniverse/hamlet:__IMAGE_TAG__
          args: ["bash", "/usr/src/app/start_worker.sh"]
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_HOST
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: DB_NAME
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: SECRET_KEY
            - name: PANOPTES_APPLICATION_ID
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: PANOPTES_APPLICATION_ID
            - name: PANOPTES_SECRET
              valueFrom:
                secretKeyRef:
                  name: hamlet-staging-conf
                  key: PANOPTES_SECRET
            - name: DJANGO_ENV
              value: staging
            - name: REDIS_URI
              value: "redis://hamlet-staging-redis"
            - name: TMP_STORAGE_PATH
              value: "/export-tmp"
          volumeMounts:
          - name: hamlet-staging-export-tmp
            mountPath: "/export-tmp"
      volumes:
      - name: hamlet-staging-export-tmp
        persistentVolumeClaim:
          claimName: hamlet-staging-export-tmp
---
apiVersion: v1
kind: Service
metadata:
  name: hamlet-staging
spec:
  selector:
    app: hamlet-staging-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hamlet-staging-redis
  annotations:
    volume.beta.kubernetes.io/storage-class: "aws-efs"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamlet-staging-redis
  labels:
    app: hamlet-staging-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: hamlet-staging-redis
  template:
    metadata:
      labels:
        app: hamlet-staging-redis
    spec:
      containers:
        - name: hamlet-staging-redis
          image: redis
          volumeMounts:
          - name: hamlet-staging-redis-data
            mountPath: "/data"
      volumes:
      - name: hamlet-staging-redis-data
        persistentVolumeClaim:
          claimName: hamlet-staging-redis
---
apiVersion: v1
kind: Service
metadata:
  name: hamlet-staging-redis
spec:
  selector:
    app: hamlet-staging-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: NodePort
