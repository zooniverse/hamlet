kind: ConfigMap
apiVersion: v1
metadata:
  name: hamlet-nginx-conf-production
data:
  nginx.conf: |+
    upstream docker-hamlet {
      server localhost:8080;
    }

    server {
      server_name hamlet.zooniverse.org
      include /etc/nginx/ssl.default.conf;
      gzip_types *;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      location = /commit_id.txt {
        root /static-assets/static/;
        expires off;
        add_header Cache-Control public;
      }

      location ~ ^/static/ {
        root /static-assets/;
        gzip_static on; # to serve pre-gzipped version
        expires max;
        add_header Cache-Control public;
      }

      location / {
        proxy_pass http://docker-hamlet;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamlet-production-app
  labels:
    app: hamlet-production-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hamlet-production-app
  template:
    metadata:
      labels:
        app: hamlet-production-app
    spec:
      containers:
        - name: hamlet-production-app
          image: ghcr.io/zooniverse/hamlet:__IMAGE_TAG__
          resources:
             requests:
               memory: "100Mi"
               cpu: "10m"
             limits:
               memory: "1000Mi"
               cpu: "1000m"
          startupProbe:
            httpGet:
              path: /
              port: 8080
              httpHeaders:
                 - name: Host
                   value: "hamlet.zooniverse.org"
            # wait 6 * 10 seconds(default periodSeconds) for the container to start
            # after this succeeds once the liveness probe takes over
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              httpHeaders:
                 - name: Host
                   value: "hamlet.zooniverse.org"
            # allow a longer response time than 1s
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              httpHeaders:
                 - name: Host
                   value: "hamlet.zooniverse.org"
            # start checking for readiness after 20s (to serve traffic)
            initialDelaySeconds: 20
            # allow a longer response time than 1s
            timeoutSeconds: 10
          env:
            - name: DB_SSL_MODE
              value: require
            - name: DJANGO_ENV
              value: production
            - name: REDIS_URI
              value: "redis://hamlet-production-redis"
            - name: STATIC_ROOT
              value: "/static-assets/static/"
          envFrom:
            - secretRef:
                name: hamlet-production-conf
          volumeMounts:
            - name: static-assets
              mountPath: "/static-assets"
        - name: hamlet-nginx
          image: zooniverse/apps-nginx:xenial
          resources:
            requests:
              memory: "60Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                 - name: Host
                   value: "hamlet.zooniverse.org"
            initialDelaySeconds: 10
          ports:
            - containerPort: 80
          volumeMounts:
            - name: static-assets
              mountPath: "/static-assets"
            - name: hamlet-nginx-conf
              mountPath: "/etc/nginx-sites"
      volumes:
        - name: static-assets
          hostPath:
            # directory location on host node temp disk
            path: /mnt/hamlet-production-app-static-assets
            type: DirectoryOrCreate
        - name: hamlet-nginx-conf
          configMap:
            name: hamlet-nginx-conf-production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamlet-production-celery
  labels:
    app: hamlet-production-celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hamlet-production-celery
  template:
    metadata:
      labels:
        app: hamlet-production-celery
    spec:
      containers:
        - name: hamlet-production-celery
          image: ghcr.io/zooniverse/hamlet:__IMAGE_TAG__
          resources:
             requests:
               memory: "250Mi"
               cpu: "10m"
             limits:
               memory: "1000Mi"
               cpu: "1000m"
          args: ["bash", "/usr/src/app/start_worker.sh"]
          env:
            - name: DB_SSL_MODE
              value: require
            - name: DJANGO_ENV
              value: production
            - name: REDIS_URI
              value: "redis://hamlet-production-redis"
            - name: TMP_STORAGE_PATH
              value: "/export-tmp"
          envFrom:
            - secretRef:
                name: hamlet-production-conf
          volumeMounts:
            - name: hamlet-production-export-tmp
              mountPath: "/export-tmp"
      volumes:
        - name: hamlet-production-export-tmp
          hostPath:
            # directory location on host node temp disk
            path: /mnt/hamlet-production-app-export-tmp
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: hamlet-production
spec:
  selector:
    app: hamlet-production-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hamlet-production-redis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamlet-production-redis
  labels:
    app: hamlet-production-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: hamlet-production-redis
  template:
    metadata:
      labels:
        app: hamlet-production-redis
    spec:
      tolerations:
        - key: "servicelife"
          operator: "Equal"
          value: "longlife"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: servicelife
                operator: In
                values:
                - longlife
      containers:
        - name: hamlet-production-redis
          image: redis
          resources:
             requests:
               memory: "20Mi"
               cpu: "10m"
             limits:
               memory: "250Mi"
               cpu: "1000m"
          volumeMounts:
          - name: hamlet-production-redis-data
            mountPath: "/data"
      volumes:
      - name: hamlet-production-redis-data
        persistentVolumeClaim:
          claimName: hamlet-production-redis
---
apiVersion: v1
kind: Service
metadata:
  name: hamlet-production-redis
spec:
  selector:
    app: hamlet-production-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hamlet-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-body-size: 6m
spec:
  tls:
    - hosts:
      - hamlet.zooniverse.org
      secretName: zooniverse-org-tls
  rules:
    - host: hamlet.zooniverse.org
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: hamlet-production
              port:
                number: 80
